// Generated by Dagger (https://dagger.dev).
package com.example.restaurantmenu.di;

import com.example.restaurantmenu.data.remote.RestaurantMenusApi;
import com.example.restaurantmenu.domain.repository.RestaurantMenusRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideRestaurantMenusRepositoryFactory implements Factory<RestaurantMenusRepository> {
  private final Provider<RestaurantMenusApi> restaurantMenusApiProvider;

  public AppModule_ProvideRestaurantMenusRepositoryFactory(
      Provider<RestaurantMenusApi> restaurantMenusApiProvider) {
    this.restaurantMenusApiProvider = restaurantMenusApiProvider;
  }

  @Override
  public RestaurantMenusRepository get() {
    return provideRestaurantMenusRepository(restaurantMenusApiProvider.get());
  }

  public static AppModule_ProvideRestaurantMenusRepositoryFactory create(
      Provider<RestaurantMenusApi> restaurantMenusApiProvider) {
    return new AppModule_ProvideRestaurantMenusRepositoryFactory(restaurantMenusApiProvider);
  }

  public static RestaurantMenusRepository provideRestaurantMenusRepository(
      RestaurantMenusApi restaurantMenusApi) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRestaurantMenusRepository(restaurantMenusApi));
  }
}
