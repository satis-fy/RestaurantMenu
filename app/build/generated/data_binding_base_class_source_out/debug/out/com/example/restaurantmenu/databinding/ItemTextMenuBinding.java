// Generated by view binder compiler. Do not edit!
package com.example.restaurantmenu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.restaurantmenu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTextMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton buttonAdd;

  @NonNull
  public final AppCompatTextView textViewDescription;

  @NonNull
  public final AppCompatTextView textViewName;

  @NonNull
  public final AppCompatTextView textViewPrice;

  @NonNull
  public final View viewBottomLine;

  private ItemTextMenuBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton buttonAdd, @NonNull AppCompatTextView textViewDescription,
      @NonNull AppCompatTextView textViewName, @NonNull AppCompatTextView textViewPrice,
      @NonNull View viewBottomLine) {
    this.rootView = rootView;
    this.buttonAdd = buttonAdd;
    this.textViewDescription = textViewDescription;
    this.textViewName = textViewName;
    this.textViewPrice = textViewPrice;
    this.viewBottomLine = viewBottomLine;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTextMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTextMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_text_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTextMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAdd;
      AppCompatButton buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.textViewDescription;
      AppCompatTextView textViewDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDescription == null) {
        break missingId;
      }

      id = R.id.textViewName;
      AppCompatTextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.textViewPrice;
      AppCompatTextView textViewPrice = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrice == null) {
        break missingId;
      }

      id = R.id.viewBottomLine;
      View viewBottomLine = ViewBindings.findChildViewById(rootView, id);
      if (viewBottomLine == null) {
        break missingId;
      }

      return new ItemTextMenuBinding((ConstraintLayout) rootView, buttonAdd, textViewDescription,
          textViewName, textViewPrice, viewBottomLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
